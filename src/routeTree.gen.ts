/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LoginLayoutImport } from './routes/login/_layout'
import { Route as authLayoutImport } from './routes/(auth)/_layout'
import { Route as LoginLayoutIndexImport } from './routes/login/_layout.index'
import { Route as authOnboardingLayoutImport } from './routes/(auth)/onboarding/_layout'
import { Route as authDashboardLayoutImport } from './routes/(auth)/dashboard/_layout'
import { Route as authDashboardLayoutIndexImport } from './routes/(auth)/dashboard/_layout.index'
import { Route as authOnboardingLayoutUsernameImport } from './routes/(auth)/onboarding/_layout.username'
import { Route as authDashboardLayoutSettingsImport } from './routes/(auth)/dashboard/_layout.settings'
import { Route as authDashboardLayoutCheckoutImport } from './routes/(auth)/dashboard/_layout.checkout'
import { Route as authDashboardLayoutSettingsIndexImport } from './routes/(auth)/dashboard/_layout.settings.index'
import { Route as authDashboardLayoutSettingsBillingImport } from './routes/(auth)/dashboard/_layout.settings.billing'

// Create Virtual Routes

const LoginImport = createFileRoute('/login')()
const authImport = createFileRoute('/(auth)')()
const authOnboardingImport = createFileRoute('/(auth)/onboarding')()
const authDashboardImport = createFileRoute('/(auth)/dashboard')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authOnboardingRoute = authOnboardingImport.update({
  path: '/onboarding',
  getParentRoute: () => authRoute,
} as any)

const authDashboardRoute = authDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => authRoute,
} as any)

const LoginLayoutRoute = LoginLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LoginRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)

const LoginLayoutIndexRoute = LoginLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LoginLayoutRoute,
} as any)

const authOnboardingLayoutRoute = authOnboardingLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authOnboardingRoute,
} as any)

const authDashboardLayoutRoute = authDashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authDashboardRoute,
} as any)

const authDashboardLayoutIndexRoute = authDashboardLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => authDashboardLayoutRoute,
} as any)

const authOnboardingLayoutUsernameRoute =
  authOnboardingLayoutUsernameImport.update({
    path: '/username',
    getParentRoute: () => authOnboardingLayoutRoute,
  } as any)

const authDashboardLayoutSettingsRoute =
  authDashboardLayoutSettingsImport.update({
    path: '/settings',
    getParentRoute: () => authDashboardLayoutRoute,
  } as any)

const authDashboardLayoutCheckoutRoute =
  authDashboardLayoutCheckoutImport.update({
    path: '/checkout',
    getParentRoute: () => authDashboardLayoutRoute,
  } as any)

const authDashboardLayoutSettingsIndexRoute =
  authDashboardLayoutSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => authDashboardLayoutSettingsRoute,
  } as any)

const authDashboardLayoutSettingsBillingRoute =
  authDashboardLayoutSettingsBillingImport.update({
    path: '/billing',
    getParentRoute: () => authDashboardLayoutSettingsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof authRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/login/_layout': {
      id: '/login/_layout'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLayoutImport
      parentRoute: typeof LoginRoute
    }
    '/(auth)/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authDashboardImport
      parentRoute: typeof authImport
    }
    '/(auth)/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authDashboardLayoutImport
      parentRoute: typeof authDashboardRoute
    }
    '/(auth)/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingImport
      parentRoute: typeof authImport
    }
    '/(auth)/onboarding/_layout': {
      id: '/onboarding/_layout'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingLayoutImport
      parentRoute: typeof authOnboardingRoute
    }
    '/login/_layout/': {
      id: '/login/_layout/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginLayoutIndexImport
      parentRoute: typeof LoginLayoutImport
    }
    '/(auth)/dashboard/_layout/checkout': {
      id: '/dashboard/_layout/checkout'
      path: '/checkout'
      fullPath: '/dashboard/checkout'
      preLoaderRoute: typeof authDashboardLayoutCheckoutImport
      parentRoute: typeof authDashboardLayoutImport
    }
    '/(auth)/dashboard/_layout/settings': {
      id: '/dashboard/_layout/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof authDashboardLayoutSettingsImport
      parentRoute: typeof authDashboardLayoutImport
    }
    '/(auth)/onboarding/_layout/username': {
      id: '/onboarding/_layout/username'
      path: '/username'
      fullPath: '/onboarding/username'
      preLoaderRoute: typeof authOnboardingLayoutUsernameImport
      parentRoute: typeof authOnboardingLayoutImport
    }
    '/(auth)/dashboard/_layout/': {
      id: '/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof authDashboardLayoutIndexImport
      parentRoute: typeof authDashboardLayoutImport
    }
    '/(auth)/dashboard/_layout/settings/billing': {
      id: '/dashboard/_layout/settings/billing'
      path: '/billing'
      fullPath: '/dashboard/settings/billing'
      preLoaderRoute: typeof authDashboardLayoutSettingsBillingImport
      parentRoute: typeof authDashboardLayoutSettingsImport
    }
    '/(auth)/dashboard/_layout/settings/': {
      id: '/dashboard/_layout/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof authDashboardLayoutSettingsIndexImport
      parentRoute: typeof authDashboardLayoutSettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  authRoute: authRoute.addChildren({
    authDashboardRoute: authDashboardRoute.addChildren({
      authDashboardLayoutRoute: authDashboardLayoutRoute.addChildren({
        authDashboardLayoutCheckoutRoute,
        authDashboardLayoutSettingsRoute:
          authDashboardLayoutSettingsRoute.addChildren({
            authDashboardLayoutSettingsBillingRoute,
            authDashboardLayoutSettingsIndexRoute,
          }),
        authDashboardLayoutIndexRoute,
      }),
    }),
    authOnboardingRoute: authOnboardingRoute.addChildren({
      authOnboardingLayoutRoute: authOnboardingLayoutRoute.addChildren({
        authOnboardingLayoutUsernameRoute,
      }),
    }),
  }),
  LoginRoute: LoginRoute.addChildren({
    LoginLayoutRoute: LoginLayoutRoute.addChildren({ LoginLayoutIndexRoute }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/",
        "/login"
      ]
    },
    "/": {
      "filePath": "(auth)",
      "children": [
        "/_layout",
        "/dashboard",
        "/onboarding"
      ]
    },
    "/_layout": {
      "filePath": "(auth)/_layout.tsx",
      "parent": "/"
    },
    "/login": {
      "filePath": "login",
      "children": [
        "/login/_layout"
      ]
    },
    "/login/_layout": {
      "filePath": "login/_layout.tsx",
      "parent": "/login",
      "children": [
        "/login/_layout/"
      ]
    },
    "/dashboard": {
      "filePath": "(auth)/dashboard",
      "parent": "/",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "(auth)/dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/checkout",
        "/dashboard/_layout/settings",
        "/dashboard/_layout/"
      ]
    },
    "/onboarding": {
      "filePath": "(auth)/onboarding",
      "parent": "/",
      "children": [
        "/onboarding/_layout"
      ]
    },
    "/onboarding/_layout": {
      "filePath": "(auth)/onboarding/_layout.tsx",
      "parent": "/onboarding",
      "children": [
        "/onboarding/_layout/username"
      ]
    },
    "/login/_layout/": {
      "filePath": "login/_layout.index.tsx",
      "parent": "/login/_layout"
    },
    "/dashboard/_layout/checkout": {
      "filePath": "(auth)/dashboard/_layout.checkout.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/settings": {
      "filePath": "(auth)/dashboard/_layout.settings.tsx",
      "parent": "/dashboard/_layout",
      "children": [
        "/dashboard/_layout/settings/billing",
        "/dashboard/_layout/settings/"
      ]
    },
    "/onboarding/_layout/username": {
      "filePath": "(auth)/onboarding/_layout.username.tsx",
      "parent": "/onboarding/_layout"
    },
    "/dashboard/_layout/": {
      "filePath": "(auth)/dashboard/_layout.index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/settings/billing": {
      "filePath": "(auth)/dashboard/_layout.settings.billing.tsx",
      "parent": "/dashboard/_layout/settings"
    },
    "/dashboard/_layout/settings/": {
      "filePath": "(auth)/dashboard/_layout.settings.index.tsx",
      "parent": "/dashboard/_layout/settings"
    }
  }
}
ROUTE_MANIFEST_END */
