/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingLayoutImport } from './routes/onboarding/_layout'
import { Route as LoginLayoutImport } from './routes/login/_layout'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as LoginLayoutIndexImport } from './routes/login/_layout.index'
import { Route as DashboardLayoutIndexImport } from './routes/dashboard/_layout.index'
import { Route as OnboardingLayoutUsernameImport } from './routes/onboarding/_layout.username'
import { Route as DashboardLayoutSettingsImport } from './routes/dashboard/_layout.settings'
import { Route as DashboardLayoutSettingsIndexImport } from './routes/dashboard/_layout.settings.index'
import { Route as DashboardLayoutSettingsBillingImport } from './routes/dashboard/_layout.settings.billing'

// Create Virtual Routes

const OnboardingImport = createFileRoute('/onboarding')()
const LoginImport = createFileRoute('/login')()
const DashboardImport = createFileRoute('/dashboard')()

// Create/Update Routes

const OnboardingRoute = OnboardingImport.update({
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingLayoutRoute = OnboardingLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => OnboardingRoute,
} as any)

const LoginLayoutRoute = LoginLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LoginRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)

const LoginLayoutIndexRoute = LoginLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LoginLayoutRoute,
} as any)

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const OnboardingLayoutUsernameRoute = OnboardingLayoutUsernameImport.update({
  path: '/username',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const DashboardLayoutSettingsRoute = DashboardLayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutSettingsIndexRoute =
  DashboardLayoutSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => DashboardLayoutSettingsRoute,
  } as any)

const DashboardLayoutSettingsBillingRoute =
  DashboardLayoutSettingsBillingImport.update({
    path: '/billing',
    getParentRoute: () => DashboardLayoutSettingsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/login/_layout': {
      id: '/login/_layout'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLayoutImport
      parentRoute: typeof LoginRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/_layout': {
      id: '/onboarding/_layout'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingLayoutImport
      parentRoute: typeof OnboardingRoute
    }
    '/dashboard/_layout/settings': {
      id: '/dashboard/_layout/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardLayoutSettingsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/onboarding/_layout/username': {
      id: '/onboarding/_layout/username'
      path: '/username'
      fullPath: '/onboarding/username'
      preLoaderRoute: typeof OnboardingLayoutUsernameImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/dashboard/_layout/': {
      id: '/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardLayoutIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/login/_layout/': {
      id: '/login/_layout/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginLayoutIndexImport
      parentRoute: typeof LoginLayoutImport
    }
    '/dashboard/_layout/settings/billing': {
      id: '/dashboard/_layout/settings/billing'
      path: '/billing'
      fullPath: '/dashboard/settings/billing'
      preLoaderRoute: typeof DashboardLayoutSettingsBillingImport
      parentRoute: typeof DashboardLayoutSettingsImport
    }
    '/dashboard/_layout/settings/': {
      id: '/dashboard/_layout/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof DashboardLayoutSettingsIndexImport
      parentRoute: typeof DashboardLayoutSettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardLayoutRoute: DashboardLayoutRoute.addChildren({
      DashboardLayoutSettingsRoute: DashboardLayoutSettingsRoute.addChildren({
        DashboardLayoutSettingsBillingRoute,
        DashboardLayoutSettingsIndexRoute,
      }),
      DashboardLayoutIndexRoute,
    }),
  }),
  LoginRoute: LoginRoute.addChildren({
    LoginLayoutRoute: LoginLayoutRoute.addChildren({ LoginLayoutIndexRoute }),
  }),
  OnboardingRoute: OnboardingRoute.addChildren({
    OnboardingLayoutRoute: OnboardingLayoutRoute.addChildren({
      OnboardingLayoutUsernameRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/onboarding"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/settings",
        "/dashboard/_layout/"
      ]
    },
    "/login": {
      "filePath": "login",
      "children": [
        "/login/_layout"
      ]
    },
    "/login/_layout": {
      "filePath": "login/_layout.tsx",
      "parent": "/login",
      "children": [
        "/login/_layout/"
      ]
    },
    "/onboarding": {
      "filePath": "onboarding",
      "children": [
        "/onboarding/_layout"
      ]
    },
    "/onboarding/_layout": {
      "filePath": "onboarding/_layout.tsx",
      "parent": "/onboarding",
      "children": [
        "/onboarding/_layout/username"
      ]
    },
    "/dashboard/_layout/settings": {
      "filePath": "dashboard/_layout.settings.tsx",
      "parent": "/dashboard/_layout",
      "children": [
        "/dashboard/_layout/settings/billing",
        "/dashboard/_layout/settings/"
      ]
    },
    "/onboarding/_layout/username": {
      "filePath": "onboarding/_layout.username.tsx",
      "parent": "/onboarding/_layout"
    },
    "/dashboard/_layout/": {
      "filePath": "dashboard/_layout.index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/login/_layout/": {
      "filePath": "login/_layout.index.tsx",
      "parent": "/login/_layout"
    },
    "/dashboard/_layout/settings/billing": {
      "filePath": "dashboard/_layout.settings.billing.tsx",
      "parent": "/dashboard/_layout/settings"
    },
    "/dashboard/_layout/settings/": {
      "filePath": "dashboard/_layout.settings.index.tsx",
      "parent": "/dashboard/_layout/settings"
    }
  }
}
ROUTE_MANIFEST_END */
